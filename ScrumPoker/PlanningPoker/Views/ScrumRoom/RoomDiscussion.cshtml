@model List<string>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="roomName">Комната: @ViewBag.PokerRoomId  - @ViewBag.NamePlayer</p>
@{
    await Html.RenderPartialAsync("~/Views/Chat/_Chat.cshtml", new Message { PokerRoomId = ViewBag.PokerRoomId, PlayerId = ViewBag.PlayerId, CreateDate = DateTime.Today });
}
@if (ViewBag.countTopicDiscussion != 0)
{
    <div class="topicDiscussion">
        <p>Задача: @ViewBag.Title</p>
        <p>Описание: @ViewBag.Title</p>
        <p>@ViewBag.Warning</p>
    </div>
    @using (Html.BeginForm("GetResultVote", "ScrumRoom", FormMethod.Post)) /*добавить метод обработки */
    {
        <input id="PokerRoomId" name="PokerRoomId" type="hidden" value=@ViewBag.PokerRoomId />
        <input id="PlayerId" name="PlayerId" type="hidden" value=@ViewBag.PlayerId />
        <input id="TopicId" name="TopicId" type="hidden" value=@ViewBag.IdTopic />

        <div class="commentField">
            @Html.Label("Comment", "Комментарий")
            <br />
            @Html.TextArea("Comment")
        </div>
        <div class="valueTopic">
            @foreach (var value in Model)
            {
                <input type="submit" name="ValueCard" class="topicDiscussionBTN" value=@value />
            }
        </div>
    }
}
else
{
    <div class="topicDiscussion">
        <p>Обсуждение еще не началось.</p>
    </div>
}
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/js/voting.js"></script>

